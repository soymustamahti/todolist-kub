---
- name: Setup Kubernetes cluster with kubeadm
  hosts: all
  become: yes
  gather_facts: yes
  vars:
    kubernetes_version: "1.30.14"
    pod_cidr: "10.244.0.0/16"
    service_cidr: "10.96.0.0/12"
    
  tasks:
    - name: Update system packages
      apt:
        update_cache: yes
        upgrade: dist
        
    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - software-properties-common
        state: present
        
    - name: Disable swap
      shell: |
        swapoff -a
        sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
        
    - name: Load kernel modules
      modprobe:
        name: "{{ item }}"
      loop:
        - overlay
        - br_netfilter
        
    - name: Configure kernel modules to load on boot
      lineinfile:
        path: /etc/modules-load.d/k8s.conf
        line: "{{ item }}"
        create: yes
      loop:
        - overlay
        - br_netfilter
        
    - name: Configure sysctl parameters
      sysctl:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        sysctl_file: /etc/sysctl.d/k8s.conf
        reload: yes
      loop:
        - { name: 'net.bridge.bridge-nf-call-iptables', value: '1' }
        - { name: 'net.bridge.bridge-nf-call-ip6tables', value: '1' }
        - { name: 'net.ipv4.ip_forward', value: '1' }
        
    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
        
    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        
    - name: Install containerd
      apt:
        name: containerd.io
        state: present
        update_cache: yes
        
    - name: Create containerd config directory
      file:
        path: /etc/containerd
        state: directory
        
    - name: Generate containerd config
      shell: containerd config default > /etc/containerd/config.toml
      
    - name: Configure containerd to use systemd cgroup driver
      replace:
        path: /etc/containerd/config.toml
        regexp: 'SystemdCgroup = false'
        replace: 'SystemdCgroup = true'
        
    - name: Restart and enable containerd
      systemd:
        name: containerd
        state: restarted
        enabled: yes
        
    - name: Install Docker for convenience (optional)
      apt:
        name:
          - docker-ce
          - docker-ce-cli
        state: present
      ignore_errors: yes
        
    - name: Configure Docker daemon
      copy:
        content: |
          {
            "exec-opts": ["native.cgroupdriver=systemd"],
            "log-driver": "json-file",
            "log-opts": {
              "max-size": "100m"
            },
            "storage-driver": "overlay2"
          }
        dest: /etc/docker/daemon.json
      ignore_errors: yes
        
    - name: Start Docker service if available
      systemd:
        name: docker
        state: started
        enabled: yes
      ignore_errors: yes
        
    - name: Add Kubernetes GPG key
      apt_key:
        url: https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key
        state: present
        
    - name: Add Kubernetes repository
      apt_repository:
        repo: "deb https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /"
        state: present
        
    - name: Unhold Kubernetes packages if they exist
      dpkg_selections:
        name: "{{ item }}"
        selection: install
      loop:
        - kubelet
        - kubeadm
        - kubectl
      ignore_errors: yes
        
    - name: Install Kubernetes packages
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        update_cache: yes
        
    - name: Hold Kubernetes packages
      dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop:
        - kubelet
        - kubeadm
        - kubectl
        
    - name: Enable kubelet service
      systemd:
        name: kubelet
        enabled: yes
