---
- name: Install ArgoCD using Helm
  hosts: master
  become: yes
  gather_facts: yes
  
  tasks:
    - name: Add ArgoCD Helm repository
      shell: helm repo add argo https://argoproj.github.io/argo-helm
      
    - name: Update Helm repositories
      shell: helm repo update
        
    - name: Create argocd namespace
      shell: kubectl create namespace argocd --dry-run=client -o yaml | kubectl apply -f -
        
    - name: Install ArgoCD using Helm
      shell: |
        helm upgrade --install argocd argo/argo-cd \
          --namespace argocd \
          --set server.service.type=NodePort \
          --set server.service.nodePortHttp=30080 \
          --set server.service.nodePortHttps=30443 \
          --set server.extraArgs[0]="--insecure" \
          --set configs.params."server\.insecure"=true \
          --set redis-ha.enabled=false \
          --set controller.replicas=1 \
          --set server.replicas=1 \
          --set server.autoscaling.enabled=false \
          --set repoServer.replicas=1 \
          --set repoServer.autoscaling.enabled=false \
          --set applicationSet.replicas=1
      
    - name: Wait for ArgoCD pods to be ready
      shell: kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=argocd-server -n argocd --timeout=300s
      
    - name: Get ArgoCD admin password
      shell: kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d
      register: argocd_password
      ignore_errors: yes
      
    - name: Display ArgoCD access information
      debug:
        msg: |
          ArgoCD is installed successfully!
          Access URL: http://{{ ansible_default_ipv4.address }}:30080
          Username: admin
          Password: {{ argocd_password.stdout | default('Check manually: kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d') }}
          
    - name: Verify ArgoCD installation
      shell: kubectl get pods -n argocd
      register: argocd_pods
      
    - name: Show ArgoCD pods status
      debug:
        msg: "{{ argocd_pods.stdout_lines }}"
