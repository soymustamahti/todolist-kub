---
- name: Setup Kubernetes Cluster from Scratch
  hosts: all
  become: yes
  gather_facts: yes
  vars:
    kubernetes_version: "1.28"
    docker_version: "24.0.7"

  tasks:
    - name: Set hostname
      hostname:
        name: "{{ inventory_hostname }}"

    - name: Update /etc/hosts
      lineinfile:
        path: /etc/hosts
        line: "{{ ansible_default_ipv4.address }} {{ inventory_hostname }}"
        state: present

- name: Common Setup for All Nodes
  hosts: k8s_cluster
  become: yes
  roles:
    - common
    - docker
    - kubernetes

- name: Initialize Master Node
  hosts: master
  become: yes
  roles:
    - master

- name: Join Worker Nodes
  hosts: workers
  become: yes
  roles:
    - workers

- name: Deploy Infrastructure Components
  hosts: master
  become: yes
  roles:
    - traefik
    - prometheus
    - argocd

- name: Deploy ToDo Application
  hosts: master
  become: yes
  tasks:
    - name: Wait for all nodes to be ready
      shell: kubectl get nodes --no-headers | awk '$2!="Ready"{print}' | wc -l
      register: not_ready_nodes
      until: not_ready_nodes.stdout == "0"
      retries: 30
      delay: 10
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

    - name: Create todoapp namespace
      shell: kubectl create namespace todoapp --dry-run=client -o yaml | kubectl apply -f -
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

    - name: Copy Kubernetes manifests to master
      copy:
        src: "{{ item }}"
        dest: "/tmp/{{ item | basename }}"
      with_fileglob:
        - "k8s-manifests/*.yaml"

    - name: Apply database manifests
      shell: kubectl apply -f /tmp/db.yaml
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

    - name: Wait for PostgreSQL to be ready
      shell: kubectl wait --for=condition=ready pod -l app=postgres -n todoapp --timeout=600s
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      ignore_errors: yes

    - name: Apply application manifests
      shell: kubectl apply -f /tmp/app.yaml
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

    - name: Apply ingress manifests
      shell: kubectl apply -f /tmp/ingress.yaml
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

    - name: Display cluster information
      debug:
        msg: |
          üéâ Kubernetes cluster is ready!

          Master node: {{ ansible_default_ipv4.address }}

          üåê Access URLs:
          - ToDo App: http://{{ ansible_default_ipv4.address }}:30080
          - ArgoCD: http://{{ ansible_default_ipv4.address }}:30092
          - Prometheus: http://{{ ansible_default_ipv4.address }}:30090
          - Grafana: http://{{ ansible_default_ipv4.address }}:30091

          üîë To get ArgoCD admin password:
          kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d
