---
# Install ArgoCD for GitOps
- name: Create ArgoCD namespace
  shell: kubectl create namespace argocd --dry-run=client -o yaml | kubectl apply -f -
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf

- name: Install ArgoCD
  shell: |
    kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf

- name: Patch ArgoCD server service to NodePort
  shell: |
    kubectl patch svc argocd-server -n argocd -p '{"spec":{"type":"NodePort","ports":[{"port":80,"targetPort":8080,"nodePort":30092},{"port":443,"targetPort":8080,"nodePort":30093}]}}'
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf

- name: Wait for ArgoCD to be ready
  shell: kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=argocd-server -n argocd --timeout=300s
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf

- name: Get ArgoCD admin password
  shell: |
    kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  register: argocd_password

- name: Display ArgoCD admin password
  debug:
    msg: "ArgoCD admin password: {{ argocd_password.stdout }}"

- name: Apply ArgoCD application for ToDo app
  shell: kubectl apply -f /tmp/argo-app.yaml
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf

- name: Wait for ArgoCD application to sync
  shell: kubectl get application todoapp -n argocd -o jsonpath='{.status.sync.status}'
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  register: app_sync_status
  until: app_sync_status.stdout == "Synced"
  retries: 20
  delay: 15
  ignore_errors: yes
