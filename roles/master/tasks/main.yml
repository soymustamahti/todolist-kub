---
# Initialize Kubernetes master node
- name: Check if cluster is already initialized
  stat:
    path: /etc/kubernetes/admin.conf
  register: kubeconfig

- name: Initialize Kubernetes cluster
  shell: |
    kubeadm init --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address={{ ansible_default_ipv4.address }}
  when: not kubeconfig.stat.exists
  register: kubeadm_init

- name: Create .kube directory for root
  file:
    path: /root/.kube
    state: directory
    mode: 0755

- name: Copy admin.conf to .kube/config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    remote_src: yes
    owner: root
    group: root
    mode: 0644

- name: Install Flannel CNI
  shell: |
    kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf

- name: Get join command
  shell: kubeadm token create --print-join-command
  register: join_command
  when: not kubeconfig.stat.exists or kubeadm_init.changed

- name: Save join command to file
  copy:
    content: "{{ join_command.stdout }}"
    dest: /tmp/kubeadm_join_command.sh
    mode: 0755
  when: join_command.stdout is defined

- name: Fetch join command to local machine
  fetch:
    src: /tmp/kubeadm_join_command.sh
    dest: /tmp/kubeadm_join_command.sh
    flat: yes
  when: join_command.stdout is defined

- name: Wait for all nodes to be ready
  shell: kubectl get nodes --no-headers | grep -v Ready | wc -l
  register: not_ready_nodes
  until: not_ready_nodes.stdout == "0"
  retries: 30
  delay: 10
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf

- name: Create todoapp namespace
  shell: kubectl create namespace todoapp --dry-run=client -o yaml | kubectl apply -f -
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf

- name: Copy Kubernetes manifests to master
  copy:
    src: "{{ item }}"
    dest: "/tmp/{{ item | basename }}"
  with_fileglob:
    - "../../k8s-manifests/*.yaml"

- name: Apply database manifests
  shell: kubectl apply -f /tmp/db.yaml
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf

- name: Wait for PostgreSQL to be ready
  shell: kubectl wait --for=condition=ready pod -l app=postgres -n todoapp --timeout=300s
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf

- name: Apply application manifests
  shell: kubectl apply -f /tmp/app.yaml
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf

- name: Apply ingress manifests
  shell: kubectl apply -f /tmp/ingress.yaml
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf

- name: Display cluster information
  debug:
    msg: |
      Kubernetes cluster is ready!
      
      Master node: {{ ansible_default_ipv4.address }}
      
      Access URLs:
      - ToDo App: http://{{ ansible_default_ipv4.address }}:30080
      - ArgoCD: http://{{ ansible_default_ipv4.address }}:30092
      - Prometheus: http://{{ ansible_default_ipv4.address }}:30090
      - Grafana: http://{{ ansible_default_ipv4.address }}:30091
      
      To get ArgoCD admin password:
      kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d
